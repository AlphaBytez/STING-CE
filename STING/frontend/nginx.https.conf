server {
    listen 80 ssl;
    server_name localhost;
    
    # SSL configuration
    ssl_certificate /etc/nginx/certs/server.crt;
    ssl_certificate_key /etc/nginx/certs/server.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Remove server header
    server_tokens off;

    # Gzip compression
    gzip on;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/json application/xml+rss;
    gzip_min_length 1000;

    # Root directory
    root /usr/share/nginx/html;
    index index.html;

    # Serve static assets with caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Kratos-compatible STING login page
    location = /kratos-login {
        try_files /kratos-login.html =404;
        expires -1;
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
    }

    # Serve index.html for all routes (React Router support)
    location / {
        try_files $uri $uri/ /index.html;
        
        # Disable caching for index.html to ensure updates are loaded
        location = /index.html {
            expires -1;
            add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
        }
    }

    # Proxy knowledge service requests (honey jars)
    location /api/knowledge/ {
        # Remove the /api/knowledge prefix before proxying
        rewrite ^/api/knowledge(/.*)$ $1 break;
        
        proxy_pass http://sting-ce-knowledge:8090;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Pass cookies to knowledge service
        proxy_set_header Cookie $http_cookie;
        proxy_pass_request_headers on;
        
        # Increase timeouts for file uploads
        proxy_connect_timeout 60s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # Increase max upload size for documents
        client_max_body_size 100M;
    }

    # Proxy API requests to backend
    location /api/ {
        proxy_pass https://sting-ce-app:5050;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Pass cookies to backend
        proxy_set_header Cookie $http_cookie;
        proxy_pass_request_headers on;
        
        # SSL verification for backend
        proxy_ssl_verify off;
        
        # Increase timeouts for long-running requests
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Proxy Kratos endpoints (.ory paths)
    location ^~ /.ory/ {
        # Remove the /.ory prefix before proxying
        rewrite ^/\.ory(/.*)$ $1 break;
        
        proxy_pass https://kratos:4433;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Pass cookies to Kratos for session management
        proxy_set_header Cookie $http_cookie;
        proxy_pass_request_headers on;
        
        # SSL verification for Kratos
        proxy_ssl_verify off;
        
        # Timeouts for authentication requests
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # Proxy .well-known requests (for WebAuthn and other discovery endpoints)
    location ^~ /.well-known/ {
        proxy_pass https://kratos:4433;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # SSL verification for backend
        proxy_ssl_verify off;
    }
    
    # HIGH PRIORITY: Kratos AAL2 flows (must be before catch-all)
    # Use ~ for regex to handle query parameters like ?aal=aal2
    location ~ ^/self-service/login/browser {
        # This specifically handles AAL2 redirects with query parameters
        proxy_pass https://kratos:4433;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CRITICAL: Pass cookies and preserve ALL query parameters (including aal=aal2)
        proxy_set_header Cookie $http_cookie;
        proxy_pass_request_headers on;
        
        # Essential: Don't let nginx modify Kratos responses or redirects
        proxy_intercept_errors off;
        proxy_redirect off;
        
        # SSL verification for backend
        proxy_ssl_verify off;
        
        # Add explicit header to debug
        add_header X-Nginx-Route "kratos-aal2-flow" always;
    }
    
    # Legacy Kratos requests (without .ory prefix)
    location ~* ^/(self-service|sessions|identities|schemas|health|version)/ {
        proxy_pass https://kratos:4433;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Pass cookies to Kratos - critical for session handling
        proxy_set_header Cookie $http_cookie;
        proxy_pass_request_headers on;
        
        # Pass Set-Cookie headers from Kratos back to client
        proxy_pass_header Set-Cookie;
        
        # SSL verification for backend
        proxy_ssl_verify off;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}