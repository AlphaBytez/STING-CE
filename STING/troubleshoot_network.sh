#!/usr/bin/env bash
#
# STING DNS Configuration Helper
#
# This script helps fix DNS resolution issues on Windows/WSL systems
# that prevent Docker builds from accessing the internet.
#
# Common symptoms:
#   - "Temporary failure in name resolution" during pip install
#   - "Could not resolve host" errors during curl/wget
#   - Docker builds failing to download packages
#
# Usage:
#   ./fix_dns.sh [--check-only]
#

set -euo pipefail

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Logging functions
log_info() {
    echo -e "${BLUE}ℹ${NC} $1"
}

log_success() {
    echo -e "${GREEN}✓${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}⚠${NC} $1"
}

log_error() {
    echo -e "${RED}✗${NC} $1"
}

# Check if running on WSL
is_wsl() {
    if grep -qi microsoft /proc/version 2>/dev/null; then
        return 0
    fi
    return 1
}

# Test DNS resolution
test_dns() {
    local host="$1"
    if nslookup "$host" &>/dev/null || ping -c 1 "$host" &>/dev/null 2>&1; then
        return 0
    fi
    return 1
}

# Check if Docker daemon has DNS configured
check_docker_dns() {
    if command -v docker &>/dev/null; then
        # Try to get Docker daemon config
        local dns_servers=$(docker info 2>/dev/null | grep -i "DNS" || echo "")
        if [ -n "$dns_servers" ]; then
            echo "$dns_servers"
            return 0
        fi
    fi
    return 1
}

# Main script
echo ""
echo "╔════════════════════════════════════════════╗"
echo "║   STING DNS Configuration Helper           ║"
echo "╚════════════════════════════════════════════╝"
echo ""

CHECK_ONLY=false
if [ "${1:-}" = "--check-only" ]; then
    CHECK_ONLY=true
fi

# Detect platform
log_info "Detecting platform..."
if is_wsl; then
    log_success "Running on WSL"
    IS_WSL=true
elif [[ "$OSTYPE" == "darwin"* ]]; then
    log_success "Running on macOS"
    IS_WSL=false
else
    log_success "Running on Linux"
    IS_WSL=false
fi

# Test current DNS resolution
echo ""
log_info "Testing DNS resolution..."

DNS_WORKS=true
for host in pypi.org raw.githubusercontent.com google.com; do
    if test_dns "$host"; then
        log_success "$host resolves correctly"
    else
        log_error "$host failed to resolve"
        DNS_WORKS=false
    fi
done

if [ "$DNS_WORKS" = true ]; then
    echo ""
    log_success "All DNS tests passed! Your system DNS is working correctly."
    echo ""
    log_info "If you're still experiencing build issues, they may be caused by:"
    log_info "  • Docker daemon not using system DNS"
    log_info "  • BuildKit not inheriting DNS configuration"
    echo ""
    log_info "STING now automatically configures BuildKit DNS via buildkitd.toml"
    log_info "If issues persist, try: ./manage_sting.sh rebuild --no-cache"
    exit 0
fi

if [ "$CHECK_ONLY" = true ]; then
    echo ""
    log_error "DNS resolution is not working correctly."
    log_info "Run this script without --check-only to apply fixes"
    exit 1
fi

# DNS is broken, offer to fix it
echo ""
log_warning "DNS resolution is not working correctly"
echo ""

if [ "$IS_WSL" = true ]; then
    log_info "WSL-specific DNS fix options:"
    echo ""
    echo "Option 1: Automatic fix (recommended)"
    echo "  • Configure /etc/resolv.conf with Google DNS"
    echo "  • Prevent WSL from overwriting it"
    echo ""
    echo "Option 2: Manual fix"
    echo "  • Edit /etc/wsl.conf"
    echo "  • Restart WSL"
    echo ""
    read -p "Apply automatic fix? [Y/n]: " apply_fix

    if [[ ! "$apply_fix" =~ ^[Nn]$ ]]; then
        log_info "Applying WSL DNS fix..."

        # Backup existing resolv.conf
        if [ -f /etc/resolv.conf ]; then
            sudo cp /etc/resolv.conf /etc/resolv.conf.backup
            log_info "Backed up /etc/resolv.conf to /etc/resolv.conf.backup"
        fi

        # Create new resolv.conf with Google DNS
        echo "# Generated by STING DNS fix script" | sudo tee /etc/resolv.conf >/dev/null
        echo "nameserver 8.8.8.8" | sudo tee -a /etc/resolv.conf >/dev/null
        echo "nameserver 8.8.4.4" | sudo tee -a /etc/resolv.conf >/dev/null
        echo "nameserver 1.1.1.1" | sudo tee -a /etc/resolv.conf >/dev/null

        log_success "/etc/resolv.conf updated with public DNS servers"

        # Make it immutable to prevent WSL from overwriting
        sudo chattr +i /etc/resolv.conf 2>/dev/null || {
            log_warning "Could not make /etc/resolv.conf immutable"
            log_info "WSL may overwrite it on restart"
        }

        # Also configure wsl.conf to prevent auto-generation
        if [ ! -f /etc/wsl.conf ] || ! grep -q "generateResolvConf" /etc/wsl.conf 2>/dev/null; then
            log_info "Configuring /etc/wsl.conf to prevent DNS auto-generation..."

            if [ ! -f /etc/wsl.conf ]; then
                echo "[network]" | sudo tee /etc/wsl.conf >/dev/null
                echo "generateResolvConf = false" | sudo tee -a /etc/wsl.conf >/dev/null
            else
                if ! grep -q "\[network\]" /etc/wsl.conf; then
                    echo "" | sudo tee -a /etc/wsl.conf >/dev/null
                    echo "[network]" | sudo tee -a /etc/wsl.conf >/dev/null
                fi
                if ! grep -q "generateResolvConf" /etc/wsl.conf; then
                    echo "generateResolvConf = false" | sudo tee -a /etc/wsl.conf >/dev/null
                fi
            fi

            log_success "/etc/wsl.conf configured"
            log_warning "You may need to restart WSL for changes to take full effect:"
            log_info "  Run in PowerShell: wsl --shutdown"
        fi

        # Test DNS again
        echo ""
        log_info "Testing DNS resolution after fix..."
        sleep 2

        DNS_FIXED=true
        for host in pypi.org raw.githubusercontent.com google.com; do
            if test_dns "$host"; then
                log_success "$host resolves correctly"
            else
                log_error "$host still fails to resolve"
                DNS_FIXED=false
            fi
        done

        if [ "$DNS_FIXED" = true ]; then
            echo ""
            log_success "DNS has been fixed successfully!"
            log_info "You can now run the STING installer"
        else
            echo ""
            log_warning "DNS may not be fully fixed yet"
            log_info "Try restarting WSL: wsl --shutdown (from PowerShell)"
            log_info "Then reopen WSL and test again"
        fi
    fi
else
    # Non-WSL Linux or macOS
    log_info "To fix DNS on this system:"
    echo ""
    echo "1. Edit /etc/resolv.conf (requires sudo):"
    echo "   sudo nano /etc/resolv.conf"
    echo ""
    echo "2. Add these nameservers:"
    echo "   nameserver 8.8.8.8"
    echo "   nameserver 8.8.4.4"
    echo "   nameserver 1.1.1.1"
    echo ""
    echo "3. Save and test again"
    echo ""
    read -p "Apply this fix automatically? [Y/n]: " apply_fix

    if [[ ! "$apply_fix" =~ ^[Nn]$ ]]; then
        if [ -f /etc/resolv.conf ]; then
            sudo cp /etc/resolv.conf /etc/resolv.conf.backup
            log_info "Backed up /etc/resolv.conf"
        fi

        echo "# Generated by STING DNS fix script" | sudo tee /etc/resolv.conf >/dev/null
        echo "nameserver 8.8.8.8" | sudo tee -a /etc/resolv.conf >/dev/null
        echo "nameserver 8.8.4.4" | sudo tee -a /etc/resolv.conf >/dev/null
        echo "nameserver 1.1.1.1" | sudo tee -a /etc/resolv.conf >/dev/null

        log_success "DNS configuration updated"

        # Test again
        echo ""
        log_info "Testing DNS resolution..."
        sleep 2

        DNS_FIXED=true
        for host in pypi.org raw.githubusercontent.com google.com; do
            if test_dns "$host"; then
                log_success "$host resolves correctly"
            else
                log_error "$host still fails to resolve"
                DNS_FIXED=false
            fi
        done

        if [ "$DNS_FIXED" = true ]; then
            echo ""
            log_success "DNS has been fixed successfully!"
        else
            echo ""
            log_warning "DNS may require additional configuration"
            log_info "Check your network settings or contact your system administrator"
        fi
    fi
fi

echo ""
log_info "Note: STING automatically configures Docker BuildKit DNS"
log_info "via buildkitd.toml to prevent build-time DNS issues"
echo ""
