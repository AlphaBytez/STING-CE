version: "3.8"

services:
  # Development services (reduced to essential components)
  app:
    container_name: sting-ce-dev-app
    build:
      context: ./app
      dockerfile: Dockerfile
    image: sting-ce-dev-app:latest
    env_file:
      - ./conf/env/app.env
    environment:
      - DATABASE_URL=postgresql://app_user:app_secure_password_change_me@db:5432/sting_app?sslmode=disable
      - DOMAIN_NAME=localhost
      - KNOWLEDGE_SERVICE_URL=http://knowledge:8090
    volumes:
      - ./conf:/app/conf:ro
      - ./logs:/var/log/sting
    networks:
      - sting_local
    ports:
      - "5050:5050"
    depends_on:
      db:
        condition: service_healthy
      kratos:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5050/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    container_name: sting-ce-dev-db
    image: postgres:16
    environment:
      POSTGRES_DB: sting_app
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "postgres"
    volumes:
      - sting_ce_dev_postgres_data:/var/lib/postgresql/data
      - ./database/init_scripts:/docker-entrypoint-initdb.d:ro
    networks:
      - sting_local
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  kratos:
    container_name: sting-ce-dev-kratos
    image: oryd/kratos:v1.3.0
    env_file:
      - ./conf/env/kratos.env
    environment:
      - DSN=postgresql://kratos_user:kratos_secure_password_change_me@db:5432/kratos?sslmode=disable
      - HOSTNAME=kratos
    volumes:
      - ./kratos:/etc/config/kratos:ro
    networks:
      - sting_local
    ports:
      - "4433:4433"
      - "4434:4434"
    command: serve -c /etc/config/kratos/kratos.yml --dev --watch-courier
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4434/health/ready"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  knowledge:
    container_name: sting-ce-dev-knowledge
    build:
      context: ./knowledge_service
      dockerfile: Dockerfile
    image: sting-ce-dev-knowledge:latest
    env_file:
      - ./conf/env/knowledge.env
    environment:
      - CHROMA_URL=http://chroma:8000
    volumes:
      - ./conf:/app/conf:ro
    networks:
      - sting_local
    ports:
      - "8090:8090"
    depends_on:
      chroma:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8090/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  chroma:
    container_name: sting-ce-dev-chroma
    image: chromadb/chroma:0.5.20
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
      - ANONYMIZED_TELEMETRY=false
    volumes:
      - chroma_data:/chroma/chroma
    networks:
      - sting_local
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  chatbot:
    container_name: sting-ce-dev-chatbot
    build:
      context: ./chatbot
      dockerfile: Dockerfile
    image: sting-ce-dev-chatbot:latest
    env_file:
      - ./conf/env/chatbot.env
    environment:
      - KNOWLEDGE_SERVICE_URL=http://knowledge:8090
      - MESSAGING_SERVICE_URL=http://messaging:8889
    volumes:
      - ./conf:/app/conf:ro
    networks:
      - sting_local
    ports:
      - "8888:8888"
    depends_on:
      messaging:
        condition: service_healthy
      knowledge:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  messaging:
    container_name: sting-ce-dev-messaging
    build:
      context: ./messaging_service
      dockerfile: Dockerfile
    image: sting-ce-dev-messaging:latest
    environment:
      - DATABASE_URL=postgresql://app_user:app_secure_password_change_me@db:5432/sting_messaging?sslmode=disable
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./conf:/app/conf:ro
    networks:
      - sting_local
    ports:
      - "8889:8889"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8889/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  external-ai:
    container_name: sting-ce-dev-external-ai
    build:
      context: ./external_ai_service
      dockerfile: Dockerfile
    image: sting-ce-dev-external-ai:latest
    env_file:
      - ./conf/env/external-ai.env
    volumes:
      - ./conf:/app/conf:ro
    networks:
      - sting_local
    ports:
      - "8091:8091"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8091/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    container_name: sting-ce-dev-redis
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - sting_local
    environment:
      - REDIS_MAXMEMORY=512mb
      - REDIS_MAXMEMORY_POLICY=allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Optional: Mailpit for development email testing
  mailpit:
    container_name: sting-ce-dev-mailpit
    image: axllent/mailpit:v1.21.5
    profiles: ["development", "dev"]
    ports:
      - "127.0.0.1:1025:1025"  # SMTP port
      - "127.0.0.1:8025:8025"  # Web UI port
    networks:
      - sting_local
    restart: unless-stopped

networks:
  sting_local:
    driver: bridge

volumes:
  sting_ce_dev_postgres_data:
  chroma_data:
  redis_data:
